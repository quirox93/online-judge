---
import { ViewTransitions } from "astro:transitions";
import { SEO } from "astro-seo";
import "@/styles/globals.css";
import LoginStatus from "@/components/LoginStatus";
import { getUser } from "../utils/supabaseServer";
import { accessTokenName, refreshTokenName } from "../utils/config";

const accessToken = Astro.cookies.get(accessTokenName)?.value;
const refreshToken = Astro.cookies.get(refreshTokenName)?.value;

const userData = await getUser({ accessToken, refreshToken });
const isLoggedIn = !!userData;

interface Props {
  title: string;
  slug: string;
}

const { title, slug } = Astro.props as Props;
---

<!doctype html>
<html class="dark m-auto" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <SEO
      title="TCG Virtual Judge"
      description="App prototype built with Astro and Supabase authentication, deployed to Vercel"
      extend={{
        meta: [
          { name: "twitter:title", content: "TCG Virtual Judge" },
          {
            name: "twitter:description",
            content: "Virtual judge powered by GPT.",
          },
        ],
      }}
    />
    <ViewTransitions />
  </head>
  <body data-logged-in={isLoggedIn}>
    <header>
      <nav
        class="relative select-none bg-muted flex justify-center w-full mb-10 border-b-2 border-slate-600 border-t-0"
      >
        <div class="w-full max-w-3xl flex items-stretch">
          <div class="flex flex-no-shrink items-stretch h-12">
            <a
              href="/"
              class:list={[
                "flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-foreground no-underline flex items-center hover:bg-background",
                { "bg-background": slug === "home" },
              ]}>Home</a
            >
            <a
              href="/rulings"
              class:list={[
                "flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-foreground no-underline flex items-center hover:bg-background",
                { "bg-background": slug === "rulings" },
              ]}>Rulings</a
            >
            <a
              href="/about"
              class:list={[
                "flex-no-grow flex-no-shrink relative py-2 px-4 leading-normal text-foreground no-underline flex items-center hover:bg-background",
                { "bg-background": slug === "about" },
              ]}>About</a
            >
          </div>

          <div class="flex items-stretch flex-no-shrink flex-grow">
            <div class="flex items-stretch justify-end ml-auto">
              <LoginStatus
                isLoggedIn={isLoggedIn}
                transition:persist
                client:load
              />
            </div>
          </div>
        </div>
      </nav>
    </header>
    <main class="w-full flex-col flex flex-wrap items-center">
      <div class="w-full p-5 max-w-3xl flex flex-col gap-5 text-left">
        <slot />
      </div>
    </main>
    <footer class="flex items-center justify-center mt-20">
      <a
        href="https://cafecito.app/warben"
        transition:name="cafecito"
        rel="noopener"
        target="_blank"
        ><img
          srcset="https://cdn.cafecito.app/imgs/buttons/button_6.png 1x, https://cdn.cafecito.app/imgs/buttons/button_6_2x.png 2x, https://cdn.cafecito.app/imgs/buttons/button_6_3.75x.png 3.75x"
          src="https://cdn.cafecito.app/imgs/buttons/button_6.png"
          alt="Invitame un cafÃ© en cafecito.app"
        /></a
      >
    </footer>

    <style is:global>
      html {
        scrollbar-gutter: stable;
      }
      body {
        --sb-track-color: #232e33;
        --sb-thumb-color: #6baf8d;
        --sb-size: 10px;
        scrollbar-color: var(--sb-thumb-color) var(--sb-track-color);
        scrollbar-width: none;
        overflow: auto;
      }

      body::-webkit-scrollbar {
        width: var(--sb-size);
      }

      body::-webkit-scrollbar-track {
        background: transparent;
        border-radius: 0px;
      }

      body::-webkit-scrollbar-thumb {
        background: var(--sb-thumb-color);
        border-radius: 0px;
      }
    </style>
    <script>
      import { supabase } from "../utils/supabaseBrowser";
      import { accessTokenName, refreshTokenName } from "../utils/config";
      const isLoggedIn = document.body.hasAttribute("data-logged-in");

      supabase.auth.onAuthStateChange((event, session) => {
        console.log(event);
        if (event === "SIGNED_OUT" || event === "USER_UPDATED") {
          const expires = new Date(0).toUTCString();
          document.cookie = `${accessTokenName}=; path=/; expires=${expires}; SameSite=Lax; secure`;
          document.cookie = `${refreshTokenName}=; path=/; expires=${expires}; SameSite=Lax; secure`;
          if (isLoggedIn) {
            //location.reload();
          }
        } else if (event === "SIGNED_IN" || event === "TOKEN_REFRESHED") {
          const maxAge = 100 * 365 * 24 * 60 * 60; // 100 years, never expires
          document.cookie = `${accessTokenName}=${
            session!.access_token
          }; path=/; max-age=${maxAge}; SameSite=Lax; secure`;
          document.cookie = `${refreshTokenName}=${
            session!.refresh_token
          }; path=/; max-age=${maxAge}; SameSite=Lax; secure`;
          if (!isLoggedIn) {
            /location.reload();
          }
        }
      });
    </script>
  </body>
</html>
